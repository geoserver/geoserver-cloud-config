# Logging profiles for GeoServer applications

# default profile:
spring:
  profiles:
    group:
      debug:
        - "logging_debug"
        - "logging_debug_catalog"
        - "logging_debug_locks"
        - "logging_debug_events"
        - "logging_debug_cache"
        - "logging_debug_acl"
        - "logging_debug_security"
logging:
  # GeoServer Cloud specificconfiguration to inject auth, application, http request, and geoserver ows request
  # attributes to the logging MDC. The following are default values. The MDC attributes will be automatically
  # including when using the json-logs profile. For the regular console output you could tweak the logback-spring.xml
  # config file to include the required MDC properties
  mdc:
    include:
      user:
        id: false
        roles: false
      application:
        name: true
        version: true
        instance-id: true
        active-profiles: true
      http:
        id: true
        method: true
        url: true
        query-string: false
        parameters: false
        headers: false
        headers-pattern: ".*"
        cookies: false
        remote-addr: false
        remote-host: false
        session-id: false
      geoserver:
        ows:
          service-name: true
          service-version: true
          service-format: true
          operation-name: true
  level:
    root: warn
    org.springframework: warn
    org.springframework.retry.support.RetryTemplate: warn
    org.springframework.retry: warn
    org.springframework.cloud.bus: info
    org.springframework.jdbc.support: info
    com.zaxxer.hikari.pool: warn
    # log flooding with "INFO Resolving eureka endpoints via configuration"
    com.netflix.discovery.shared.resolver: warn
    # geotools roots
    org.geotools: info
    org.geotools.util.factory: warn
    org.geotools.referencing.factory: warn
    org.geowebcache.config.XMLConfiguration: error
    # geoserver roots
    org.geotools.autoconfigure: info
    oshi.hardware.platform.linux: error
    oshi.software.os: error
    org.geoserver: warn
    org.geoserver.catalog.datadir: info
    org.geoserver.catalog.datadir.internal: warn
    org.geoserver.catalog.plugin: info
    org.geoserver.jackson: info
    org.geotools.jackson: info
    org.geoserver.platform: error
    org.geoserver.platform.resource: info
    org.geoserver.jdbcconfig: info
    org.geoserver.security: info
    org.geoserver.cloud.security: info
    org.geoserver.cloud.security.gateway.sharedauth: info
    # gwc roots
    org.geoserver.gwc: info
    # gs-acl roots
    org.geoserver.acl: info
    # gs-cloud roots
    org.geoserver.cloud: info
    org.geoserver.cloud.autoconfigure: info
    org.geoserver.cloud.config.factory: info
    # bus debugging
    org.geoserver.cloud.event: info
    org.geoserver.cloud.event.bus: info
    org.springframework.cloud.bus.BusAutoConfiguration: info
    org.springframework.cloud.bus.DefaultBusPathMatcher: info
---
spring.config.activate.on-profile: logging_debug
logging:
  level:
    root: info
    org.springframework: info
    # geoserver roots
    org.geoserver: info
    org.geoserver.catalog: debug
    org.geoserver.jackson: debug
    org.geotools.jackson: debug
    # gs-cloud roots
    org.geoserver.cloud: debug
    org.geoserver.cloud.config: debug
    org.geoserver.cloud.autoconfigure: trace
    org.geoserver.cloud.config.factory: trace
    org.geoserver.cloud.gwc: debug

---
spring.config.activate.on-profile: logging_debug_security
logging:
  level:
    org.geoserver.security: debug
    org.geoserver.cloud.security: debug
    org.geoserver.cloud.security.gateway.sharedauth: debug
---
spring.config.activate.on-profile: logging_debug_catalog
logging:
  level:
    # geoserver roots
    org.geoserver.catalog: debug
    org.geoserver.catalog.datadir: debug
    # gs-cloud roots
    org.geoserver.catalog.plugin: debug
    org.geoserver.cloud.autoconfigure.catalog.backend: debug
    org.geoserver.cloud.catalog.backend: debug
    org.springframework.jdbc.core: info
    org.geoserver.cloud.gwc.backend: debug
    # set org.geoserver.cloud.backend.pgconfig.catalog.repository: trace
    # to print the stack trace of each SQL request, debug shows each request and the time it took
    org.geoserver.cloud.backend.pgconfig.catalog.repository: debug
    org.geoserver.cloud.backend.pgconfig.catalog.repository.rowmapper: debug
---
spring.config.activate.on-profile: logging_trace_catalog
logging:
  level:
    # geoserver roots
    org.geoserver.catalog: debug
    org.geoserver.catalog.datadir: trace
    # gs-cloud roots
    org.geoserver.catalog.plugin: trace
    org.geoserver.cloud.autoconfigure.catalog.backend: trace
    org.geoserver.cloud.catalog.backend: trace
    org.geoserver.cloud.gwc.backend: trace
    org.geoserver.cloud.backend.pgconfig.catalog.repository: trace
    org.geoserver.cloud.backend.pgconfig.catalog.repository.rowmapper: debug
---
spring.config.activate.on-profile: logging_debug_events
logging:
  level:
    org.geoserver.cloud.autoconfigure.catalog.event: debug
    org.geoserver.cloud.autoconfigure.event.bus: debug
    org.geoserver.cloud.event: debug
    org.geoserver.cloud.event.bus: debug
    org.geoserver.cloud.gwc.bus: debug
    org.geoserver.cloud.catalog.backend.datadir: debug
    org.geoserver.acl.bus.bridge: debug
    org.springframework.cloud.bus: info
    org.springframework.cloud.bus.BusAutoConfiguration: info
    org.springframework.cloud.bus.DefaultBusPathMatcher: info
---
spring.config.activate.on-profile: logging_debug_locks
logging:
  level:
    org.geoserver.GeoServerConfigurationLock: trace
    org.geoserver.platform.resource.MemoryLockProvider: trace
    org.geoserver.platform.resource.FileLockProvider: trace
    org.geoserver.platform.resource.NioFileLockProvider: trace
    org.geoserver.platform.resource.NioFileLock: trace
    org.geoserver.cloud.backend.pgconfig.resource.PgconfigLockProvider: trace
    org.geoserver.jdbcstore.locks: trace
    org.geoserver.cloud.config.catalog.backend.datadirectory: trace
    org.geoserver.catalog.plugin.locking: trace
    org.geoserver.cloud.catalog.locking: trace
---
spring.config.activate.on-profile: logging_debug_acl
logging:
  level:
    org.geoserver.acl: debug
    org.geoserver.acl.bus.bridge: debug
    org.geoserver.acl.plugin: debug
    org.geoserver.acl.api.client: debug
    org.geoserver.acl.plugin.accessmanager: debug

---
spring.config.activate.on-profile: logging_debug_cache
logging:
  level:
    org.geoserver.cloud.catalog.cache: debug 
    org.geoserver.acl.authorization.cache: debug
    org.geoserver.cloud.backend.pgconfig.catalog.repository.rowmapper: debug
